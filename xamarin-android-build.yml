parameters:
  environment: 'NOT_DEFINE'
  buildConfiguration: 'NOT_DEFINE'
  outputDirectory: 'NOT_DEFINE'
  keystoreFile: 'NOT_DEFINE'
  keystorePassword: 'NOT_DEFINE'
  keystoreAlias: 'NOT_DEFINE'
  keyPassword: 'NOT_DEFINE'

jobs:
  - job: 
    displayName: 'Building ${{ parameters.environment }}'
    steps:
      - task: UseDotNet@2
        displayName: Use .Net Core sdk 3.0.x
        inputs:
          packageType: 'sdk'
          version: '3.0.x'
          
      - task: Bash@3
        displayName: Bash script copy Xamarin Android mono
        inputs:
          targetType: 'inline'
          script: |
            sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 6_4_0
    
      - task: Boots@1
        displayName: Install Xamarin.Android Mono 6.4
        inputs:
          uri: 'https://download.mono-project.com/archive/6.4.0/macos-10-universal/MonoFramework-MDK-6.4.0.187.macos10.xamarin.universal.pkg'
    
      - task: NuGetToolInstaller@1
        displayName: 'Use Nuget 5.3.1'
        inputs:
          versionSpec: 5.3.1

      - task: MSBuild@1
        displayName: 'Restoring Nuget'
        inputs:
          solution: '**/*.sln'
          configuration: '${{ parameters.buildConfiguration }}'
          msbuildArguments: '/t:Restore'

      - task: XamarinAndroid@1
        inputs:
          projectFile: '**/*.csproj'
          outputDirectory: ${{ parameters.outputDirectory }}
          configuration: ${{ parameters.buildConfiguration }}

      - task: AndroidSigning@3
        displayName: 'Singing and Aligning APK files(s)'
        inputs:
          apkFiles: '${{ parameters.outputDirectory }}/*.apk'
          apksign: true
          apksignerKeystoreFile: ${{ parameters.keystoreFile }}
          apksignerKeystorePassword: ${{ parameters.keystorePassword }}
          apksignerKeystoreAlias: ${{ parameters.keystore.Alias }}
          apksignerKeyPassword: ${{ parameters.keyPassword }}
          apksignerArguments: --out ${{ parameters.outputDirectory }}/app.${{ parameters.environment }}.release.apk
          zipalign: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publishing artifact to: drop'
        inputs:
          TargetPath: '${{ parameters.outputDirectory}}/app.${{ parameters.environment }}.release.apk'
          ArtifactName: build_${{ parameters.environment }}
